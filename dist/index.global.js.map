{"version":3,"sources":["../src/index.ts","../src/utils.ts","../src/activity.ts","../src/antifraud.ts","../src/consent.ts","../src/transport.ts","../src/core.ts","../src/bug.ts"],"sourcesContent":["// src/index.ts\nimport { configure, openSession, closeSession, getSessionIdSafe } from './core';\nimport { setConsent as _setConsent, initConsent, setDNTPolicy, consentFlags } from './consent';\nimport { enqueue } from './transport';\nimport type { Config, EventPayload } from './types';\nimport { now } from './utils';\nexport * from './types';\nexport { reportBug } from './bug';\n\nlet initialized = false;\n\nexport function init(cfg: Config) {\n    if (initialized) return;\n    setDNTPolicy(cfg.privacy?.dntRespect ?? true);\n    initConsent(cfg.consent?.default ?? 'pending');\n    configure(cfg);\n    // ouverture paresseuse : dès qu’il y a visibilité/activité\n    if (document.visibilityState === 'visible') openSession();\n    document.addEventListener('visibilitychange', () => {\n        if (document.visibilityState === 'visible') openSession();\n    });\n    // Flush/close sur pagehide\n    addEventListener('pagehide', () => closeSession('pagehide'));\n    initialized = true;\n}\n\nexport function setConsent(flags: { analytics?: boolean; replay?: boolean }) {\n    _setConsent(flags);\n    if (document.visibilityState === 'visible') openSession();\n}\n\nexport function trackEvent(name: string, props?: Record<string, unknown>) {\n    const sessionId = getSessionIdSafe();\n    if (!sessionId) return;\n    const ev: EventPayload = {\n        type: 'event',\n        sessionId,\n        ts: now(),\n        name,\n        props,\n        purpose: 'diagnostics',\n    };\n    enqueue(ev);\n}\n\nexport function shutdown() {\n    closeSession('shutdown');\n}\n\nexport function getSessionId() {\n    return getSessionIdSafe();\n}\n\nexport function forgetMe() {\n    // côté core : rien de persistant par défaut (queue en mémoire).\n    // si tu ajoutes IndexedDB/localStorage pour queue offline, purge ici.\n    // Pour l’exemple, on ne stocke pas persistantement.\n    closeSession('shutdown');\n}\n\nexport const _consentFlags = consentFlags;\n","// src/utils.ts\nexport const now = () => Date.now();\n\nexport const uuid = (): string =>\n    (crypto?.randomUUID?.() ?? 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (crypto.getRandomValues(new Uint8Array(1))[0] & 0xf) >> 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    }));\n\nexport const isVisible = () => typeof document !== 'undefined' && document.visibilityState === 'visible';\n\nexport const on = <K extends keyof WindowEventMap>(t: Window, type: K, fn: (e: WindowEventMap[K]) => void) => {\n    t.addEventListener(type, fn as any, { passive: true });\n    return () => t.removeEventListener(type, fn as any);\n};\n\nexport const onDoc = <K extends keyof DocumentEventMap>(type: K, fn: (e: DocumentEventMap[K]) => void) => {\n    document.addEventListener(type, fn as any, { passive: true });\n    return () => document.removeEventListener(type, fn as any);\n};\n\nexport const clamp = (n: number, min: number, max: number) => Math.max(min, Math.min(max, n));\n\nexport const jitterMs = (baseMs: number, pct = 0.1) => {\n    const delta = baseMs * pct;\n    return baseMs + (Math.random() * 2 - 1) * delta;\n};\n\nexport const filterPII = (o: any): any => {\n    if (!o || typeof o !== 'object') return o;\n    const SUSPICIOUS = ['email', 'phone', 'password', 'ssn'];\n    const out: any = Array.isArray(o) ? [] : {};\n    for (const k of Object.keys(o)) {\n        if (SUSPICIOUS.includes(k.toLowerCase())) continue;\n        const v = (o as any)[k];\n        out[k] = typeof v === 'object' ? filterPII(v) : v;\n    }\n    return out;\n};\n\nexport const log = (...args: any[]) => {\n    if ((window as any).__POULET_DEBUG__) console.log('[poulet]', ...args);\n};\n\nexport const base64ToArrayBuffer = (b64: string) => Uint8Array.from(atob(b64), (c) => c.charCodeAt(0));\n","// src/activity.ts\nimport { isVisible, onDoc, on } from './utils';\n\nlet lastActivity = Date.now();\nlet unsub: Array<() => void> = [];\n\nexport const getLastActivity = () => lastActivity;\n\nexport const startActivityTracking = () => {\n    stopActivityTracking();\n    const touch = () => { lastActivity = Date.now(); };\n    const un1 = onDoc('mousemove', touch);\n    const un2 = onDoc('keydown', touch);\n    const un3 = onDoc('scroll', touch);\n    const un4 = onDoc('touchstart', touch);\n    const un5 = on(window, 'focus', touch);\n    const un6 = on(window, 'blur', touch);\n    const un7 = on(document, 'visibilitychange' as any, touch);\n    unsub = [un1, un2, un3, un4, un5, un6, un7];\n};\n\nexport const stopActivityTracking = () => {\n    unsub.forEach((f) => f());\n    unsub = [];\n};\n\nexport const isActive = (idleSec: number) => {\n    const idleMs = idleSec * 1000;\n    return isVisible() && (Date.now() - lastActivity) < idleMs;\n};\n","// src/antifraud.ts\nconst LS_KEY = 'poulet_leader_session';\nlet leader = false;\n\nexport const becomeLeaderIfFree = (sessionId: string): boolean => {\n    const current = localStorage.getItem(LS_KEY);\n    if (!current) {\n        localStorage.setItem(LS_KEY, sessionId);\n        leader = true;\n        return true;\n    }\n    leader = current === sessionId;\n    return leader;\n};\n\nexport const relinquishLeadership = (sessionId: string) => {\n    const current = localStorage.getItem(LS_KEY);\n    if (current === sessionId) {\n        localStorage.removeItem(LS_KEY);\n    }\n    leader = false;\n};\n\nexport const isLeader = () => leader;\n\nexport const handleStorageLeadership = (sessionId: string, onChange: (isLeader: boolean)=>void) => {\n    const listener = (e: StorageEvent) => {\n        if (e.key !== LS_KEY) return;\n        const now = localStorage.getItem(LS_KEY);\n        const newLeader = now === sessionId || !now;\n        if (!now) { // try claim\n            localStorage.setItem(LS_KEY, sessionId);\n            onChange(true);\n            leader = true;\n        } else {\n            leader = now === sessionId;\n            onChange(leader);\n        }\n    };\n    window.addEventListener('storage', listener);\n    return () => window.removeEventListener('storage', listener);\n};\n\nexport const fingerprintLite = () => ({\n    ua: navigator.userAgent,\n    tz: Intl.DateTimeFormat().resolvedOptions().timeZone ?? 'UTC',\n    dpr: window.devicePixelRatio || 1,\n});\n","// src/consent.ts\nimport type { ConsentState } from './types';\n\nlet analyticsAllowed = false;\nlet replayAllowed = false;\nlet state: ConsentState = 'pending';\nlet dntRespected = true;\n\nexport const setDNTPolicy = (respect: boolean) => { dntRespected = respect; };\n\nexport const initConsent = (defaultState: ConsentState) => {\n    state = defaultState;\n    if (dntRespected && typeof navigator !== 'undefined' && (navigator as any).doNotTrack === '1') {\n        analyticsAllowed = false;\n        replayAllowed = false;\n        state = 'denied';\n    }\n};\n\nexport const setConsent = (flags: { analytics?: boolean; replay?: boolean }) => {\n    if (typeof flags.analytics === 'boolean') {\n        analyticsAllowed = flags.analytics;\n        state = analyticsAllowed ? 'granted' : 'denied';\n    }\n    if (typeof flags.replay === 'boolean') replayAllowed = flags.replay;\n};\n\nexport const consentFlags = () => ({ analytics: analyticsAllowed, replay: replayAllowed, state });\nexport const analyticsOn = () => analyticsAllowed === true;\nexport const replayOn = () => replayAllowed === true;\n","// src/transport.ts\nimport { base64ToArrayBuffer, filterPII, log } from './utils';\nimport type { OutgoingPayload } from './types';\n\ntype TransportConfig = {\n    endpoint: string;\n    projectKey: string;\n    hmacPublicKey?: string; // base64; optional\n    debug?: boolean;\n};\n\nlet cfg: TransportConfig;\nlet queue: OutgoingPayload[] = [];\nlet flushing = false;\n\nasync function sign(body: string): Promise<string | undefined> {\n    if (!cfg.hmacPublicKey || !('crypto' in window)) return undefined;\n    try {\n        const keyData = base64ToArrayBuffer(cfg.hmacPublicKey);\n        const key = await crypto.subtle.importKey('raw', keyData, { name: 'HMAC', hash: 'SHA-256' }, false, ['sign']);\n        const sig = await crypto.subtle.sign('HMAC', key, new TextEncoder().encode(body));\n        return btoa(String.fromCharCode(...new Uint8Array(sig)));\n    } catch {\n        return undefined;\n    }\n}\n\nasync function postBatch(items: OutgoingPayload[]) {\n    const sanitized = items.map((i) => filterPII(i));\n    const body = JSON.stringify({ projectKey: cfg.projectKey, items: sanitized });\n    const sig = await sign(body);\n\n    // Try Beacon first\n    if (navigator.sendBeacon && !cfg.debug) {\n        const headers = { type: 'application/json' };\n        const blob = new Blob([body], headers);\n        const ok = navigator.sendBeacon(cfg.endpoint + '/ingest', blob);\n        if (ok) return true;\n    }\n\n    // Fallback fetch\n    const res = await fetch(cfg.endpoint + '/ingest', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json', ...(sig ? { 'x-signature': sig } : {}) },\n        body\n    });\n    return res.ok;\n}\n\nexport function initTransport(config: TransportConfig) {\n    cfg = config;\n    window.addEventListener('online', flush);\n    setInterval(flush, 5000);\n}\n\nexport function enqueue(payload: OutgoingPayload) {\n    queue.push(payload);\n    if (queue.length >= 10) void flush();\n}\n\nexport async function flush() {\n    if (flushing || queue.length === 0) return;\n    flushing = true;\n    try {\n        const batch = queue.splice(0, 20);\n        const ok = await postBatch(batch);\n        if (!ok) {\n            // put back\n            queue.unshift(...batch);\n            log('flush failed, will retry');\n        }\n    } catch (e) {\n        log('flush error', e);\n    } finally {\n        flushing = false;\n    }\n}\n","// src/core.ts\nimport { jitterMs, log, now } from './utils';\nimport { startActivityTracking, stopActivityTracking, isActive, getLastActivity } from './activity';\nimport { becomeLeaderIfFree, handleStorageLeadership, relinquishLeadership, isLeader, fingerprintLite } from './antifraud';\nimport { analyticsOn, consentFlags } from './consent';\nimport { initTransport, enqueue, flush } from './transport';\nimport type { Config, SessionState, HeartbeatPayload, SessionStart, SessionEnd } from './types';\n\nlet config: Required<Config>;\nlet session: SessionState | null = null;\nlet hbTimer: number | null = null;\nlet unStorage: (() => void) | undefined;\n\nconst DEFAULTS: Required<Config> = {\n    projectKey: '',\n    endpoint: '',\n    consent: { default: 'pending' },\n    user: {},\n    billing: { heartbeatSec: 15, idleSec: 60, maxHoursPerDay: 6 },\n    privacy: { piiFilter: true, dntRespect: true, countryHint: 'FR' },\n    security: { hmacPublicKey: undefined as any },\n    features: { bugReporter: true, replay: false, sentryBridge: false },\n    sampling: { heartbeats: 1, events: 1, bugs: 1 },\n    debug: false,\n};\n\nexport function configure(cfg: Config) {\n    config = { ...DEFAULTS, ...cfg, consent: { ...DEFAULTS.consent, ...cfg.consent } } as Required<Config>;\n    (window as any).__POULET_DEBUG__ = !!config.debug;\n    initTransport({\n        endpoint: config.endpoint,\n        projectKey: config.projectKey,\n        hmacPublicKey: config.security.hmacPublicKey,\n        debug: config.debug,\n    });\n}\n\nexport function openSession() {\n    if (session) return;\n    const id = crypto.randomUUID();\n    const fp = fingerprintLite();\n    session = {\n        sessionId: id,\n        startedAt: now(),\n        lastActivityAt: now(),\n        active: true,\n        leader: becomeLeaderIfFree(id),\n    };\n    if (unStorage) unStorage();\n    unStorage = handleStorageLeadership(id, (lead) => {\n        if (session) session.leader = lead;\n    });\n\n    startActivityTracking();\n\n    const startPayload: SessionStart = {\n        type: 'session.start',\n        sessionId: id,\n        ts: now(),\n        projectKey: config.projectKey,\n        ua: fp.ua,\n        tz: fp.tz,\n        dpr: fp.dpr,\n        consentFlags: { analytics: analyticsOn(), replay: false },\n    };\n    enqueue(startPayload);\n    scheduleHeartbeats();\n    log('session opened', id);\n}\n\nexport function closeSession(reason: SessionEnd['reason']) {\n    if (!session) return;\n    stopHeartbeats();\n    stopActivityTracking();\n    relinquishLeadership(session.sessionId);\n    const endPayload: SessionEnd = { type: 'session.end', sessionId: session.sessionId, ts: now(), reason };\n    enqueue(endPayload);\n    void flush();\n    if (unStorage) unStorage();\n    session = null;\n    log('session closed', reason);\n}\n\nfunction scheduleHeartbeats() {\n    stopHeartbeats();\n    const loop = () => {\n        if (!session) return;\n        if (!analyticsOn()) return; // consent required\n        const idle = (now() - getLastActivity()) >= config.billing.idleSec * 1000;\n        const vis = document.visibilityState === 'visible';\n        const active = vis && !idle && session.leader;\n        const fp = fingerprintLite();\n\n        if (Math.random() <= config.sampling.heartbeats && active) {\n            const hb: HeartbeatPayload = {\n                type: 'heartbeat',\n                sessionId: session.sessionId,\n                ts: now(),\n                active: true,\n                vis,\n                idle: false,\n                jitter: Math.random(),\n                ua: fp.ua,\n                tz: fp.tz,\n                dpr: fp.dpr,\n                purpose: 'billing',\n            };\n            enqueue(hb);\n        }\n\n        const next = jitterMs(config.billing.heartbeatSec * 1000, 0.1);\n        hbTimer = window.setTimeout(loop, next);\n    };\n    hbTimer = window.setTimeout(loop, jitterMs(config.billing.heartbeatSec * 1000, 0.1));\n}\n\nfunction stopHeartbeats() {\n    if (hbTimer) {\n        clearTimeout(hbTimer);\n        hbTimer = null;\n    }\n}\n\nexport const getSessionIdSafe = () => session?.sessionId ?? null;\n","// src/bug.ts\nimport { enqueue } from './transport';\nimport type { BugPayload } from './types';\nimport { now } from './utils';\nimport { getSessionIdSafe } from './core';\n\nexport function reportBug(payload: {\n    title: string; description?: string;\n    severity?: 'blocker'|'major'|'minor'|'ux';\n    attachments?: Blob[];\n}) {\n    const sessionId = getSessionIdSafe();\n    if (!sessionId) return;\n    const p: BugPayload = {\n        type: 'bug',\n        sessionId,\n        ts: now(),\n        title: payload.title,\n        description: payload.description,\n        severity: payload.severity,\n        hasCapture: !!(payload.attachments && payload.attachments.length > 0),\n        purpose: 'diagnostics'\n    };\n    enqueue(p);\n    // NOTE: upload des pièces jointes = hors scope core (peut passer par un autre endpoint)\n}\n"],"mappings":"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","names":["src_exports","__export","_consentFlags","forgetMe","getSessionId","init","reportBug","setConsent","shutdown","trackEvent","now","on","t","type","fn","onDoc","jitterMs","baseMs","pct","delta","filterPII","o","SUSPICIOUS","out","k","v","log","args","base64ToArrayBuffer","b64","c","lastActivity","unsub","getLastActivity","startActivityTracking","stopActivityTracking","touch","un1","onDoc","un2","un3","un4","un5","on","un6","un7","f","LS_KEY","leader","becomeLeaderIfFree","sessionId","current","relinquishLeadership","handleStorageLeadership","sessionId","onChange","listener","e","LS_KEY","now","newLeader","leader","fingerprintLite","_a","analyticsAllowed","replayAllowed","state","dntRespected","setDNTPolicy","respect","initConsent","defaultState","setConsent","flags","consentFlags","analyticsOn","cfg","queue","flushing","sign","body","keyData","base64ToArrayBuffer","key","sig","e","postBatch","items","sanitized","i","filterPII","headers","blob","initTransport","config","flush","enqueue","payload","batch","log","config","session","hbTimer","unStorage","DEFAULTS","configure","cfg","initTransport","openSession","id","fp","fingerprintLite","now","becomeLeaderIfFree","handleStorageLeadership","lead","startActivityTracking","startPayload","analyticsOn","enqueue","scheduleHeartbeats","log","closeSession","reason","stopHeartbeats","stopActivityTracking","relinquishLeadership","endPayload","flush","loop","idle","getLastActivity","vis","active","hb","next","jitterMs","getSessionIdSafe","_a","reportBug","payload","sessionId","getSessionIdSafe","p","now","enqueue","initialized","init","cfg","_a","_b","_c","_d","setDNTPolicy","initConsent","configure","openSession","closeSession","setConsent","flags","trackEvent","name","props","sessionId","getSessionIdSafe","ev","now","enqueue","shutdown","getSessionId","forgetMe","_consentFlags","consentFlags"]}